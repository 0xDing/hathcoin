// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hathcoin.proto

package rpc;

public final class Hathcoin {
  private Hathcoin() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface TransactionHeaderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:rpc.TransactionHeader)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>bytes From = 1;</code>
     */
    com.google.protobuf.ByteString getFrom();

    /**
     * <code>bytes To = 2;</code>
     */
    com.google.protobuf.ByteString getTo();

    /**
     * <code>uint32 Timestamp = 3;</code>
     */
    int getTimestamp();

    /**
     * <code>bytes PayloadHash = 4;</code>
     */
    com.google.protobuf.ByteString getPayloadHash();

    /**
     * <code>uint32 PayloadLength = 5;</code>
     */
    int getPayloadLength();

    /**
     * <code>uint32 Nonce = 6;</code>
     */
    int getNonce();
  }
  /**
   * Protobuf type {@code rpc.TransactionHeader}
   */
  public  static final class TransactionHeader extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:rpc.TransactionHeader)
      TransactionHeaderOrBuilder {
    // Use TransactionHeader.newBuilder() to construct.
    private TransactionHeader(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TransactionHeader() {
      from_ = com.google.protobuf.ByteString.EMPTY;
      to_ = com.google.protobuf.ByteString.EMPTY;
      timestamp_ = 0;
      payloadHash_ = com.google.protobuf.ByteString.EMPTY;
      payloadLength_ = 0;
      nonce_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private TransactionHeader(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {

              from_ = input.readBytes();
              break;
            }
            case 18: {

              to_ = input.readBytes();
              break;
            }
            case 24: {

              timestamp_ = input.readUInt32();
              break;
            }
            case 34: {

              payloadHash_ = input.readBytes();
              break;
            }
            case 40: {

              payloadLength_ = input.readUInt32();
              break;
            }
            case 48: {

              nonce_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return rpc.Hathcoin.internal_static_rpc_TransactionHeader_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return rpc.Hathcoin.internal_static_rpc_TransactionHeader_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              rpc.Hathcoin.TransactionHeader.class, rpc.Hathcoin.TransactionHeader.Builder.class);
    }

    public static final int FROM_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString from_;
    /**
     * <code>bytes From = 1;</code>
     */
    public com.google.protobuf.ByteString getFrom() {
      return from_;
    }

    public static final int TO_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString to_;
    /**
     * <code>bytes To = 2;</code>
     */
    public com.google.protobuf.ByteString getTo() {
      return to_;
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 3;
    private int timestamp_;
    /**
     * <code>uint32 Timestamp = 3;</code>
     */
    public int getTimestamp() {
      return timestamp_;
    }

    public static final int PAYLOADHASH_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString payloadHash_;
    /**
     * <code>bytes PayloadHash = 4;</code>
     */
    public com.google.protobuf.ByteString getPayloadHash() {
      return payloadHash_;
    }

    public static final int PAYLOADLENGTH_FIELD_NUMBER = 5;
    private int payloadLength_;
    /**
     * <code>uint32 PayloadLength = 5;</code>
     */
    public int getPayloadLength() {
      return payloadLength_;
    }

    public static final int NONCE_FIELD_NUMBER = 6;
    private int nonce_;
    /**
     * <code>uint32 Nonce = 6;</code>
     */
    public int getNonce() {
      return nonce_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!from_.isEmpty()) {
        output.writeBytes(1, from_);
      }
      if (!to_.isEmpty()) {
        output.writeBytes(2, to_);
      }
      if (timestamp_ != 0) {
        output.writeUInt32(3, timestamp_);
      }
      if (!payloadHash_.isEmpty()) {
        output.writeBytes(4, payloadHash_);
      }
      if (payloadLength_ != 0) {
        output.writeUInt32(5, payloadLength_);
      }
      if (nonce_ != 0) {
        output.writeUInt32(6, nonce_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!from_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, from_);
      }
      if (!to_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, to_);
      }
      if (timestamp_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, timestamp_);
      }
      if (!payloadHash_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, payloadHash_);
      }
      if (payloadLength_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, payloadLength_);
      }
      if (nonce_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, nonce_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof rpc.Hathcoin.TransactionHeader)) {
        return super.equals(obj);
      }
      rpc.Hathcoin.TransactionHeader other = (rpc.Hathcoin.TransactionHeader) obj;

      boolean result = true;
      result = result && getFrom()
          .equals(other.getFrom());
      result = result && getTo()
          .equals(other.getTo());
      result = result && (getTimestamp()
          == other.getTimestamp());
      result = result && getPayloadHash()
          .equals(other.getPayloadHash());
      result = result && (getPayloadLength()
          == other.getPayloadLength());
      result = result && (getNonce()
          == other.getNonce());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + FROM_FIELD_NUMBER;
      hash = (53 * hash) + getFrom().hashCode();
      hash = (37 * hash) + TO_FIELD_NUMBER;
      hash = (53 * hash) + getTo().hashCode();
      hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
      hash = (53 * hash) + getTimestamp();
      hash = (37 * hash) + PAYLOADHASH_FIELD_NUMBER;
      hash = (53 * hash) + getPayloadHash().hashCode();
      hash = (37 * hash) + PAYLOADLENGTH_FIELD_NUMBER;
      hash = (53 * hash) + getPayloadLength();
      hash = (37 * hash) + NONCE_FIELD_NUMBER;
      hash = (53 * hash) + getNonce();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static rpc.Hathcoin.TransactionHeader parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rpc.Hathcoin.TransactionHeader parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rpc.Hathcoin.TransactionHeader parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rpc.Hathcoin.TransactionHeader parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rpc.Hathcoin.TransactionHeader parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rpc.Hathcoin.TransactionHeader parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rpc.Hathcoin.TransactionHeader parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static rpc.Hathcoin.TransactionHeader parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static rpc.Hathcoin.TransactionHeader parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static rpc.Hathcoin.TransactionHeader parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static rpc.Hathcoin.TransactionHeader parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static rpc.Hathcoin.TransactionHeader parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(rpc.Hathcoin.TransactionHeader prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code rpc.TransactionHeader}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:rpc.TransactionHeader)
        rpc.Hathcoin.TransactionHeaderOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return rpc.Hathcoin.internal_static_rpc_TransactionHeader_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return rpc.Hathcoin.internal_static_rpc_TransactionHeader_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                rpc.Hathcoin.TransactionHeader.class, rpc.Hathcoin.TransactionHeader.Builder.class);
      }

      // Construct using rpc.Hathcoin.TransactionHeader.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        from_ = com.google.protobuf.ByteString.EMPTY;

        to_ = com.google.protobuf.ByteString.EMPTY;

        timestamp_ = 0;

        payloadHash_ = com.google.protobuf.ByteString.EMPTY;

        payloadLength_ = 0;

        nonce_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return rpc.Hathcoin.internal_static_rpc_TransactionHeader_descriptor;
      }

      public rpc.Hathcoin.TransactionHeader getDefaultInstanceForType() {
        return rpc.Hathcoin.TransactionHeader.getDefaultInstance();
      }

      public rpc.Hathcoin.TransactionHeader build() {
        rpc.Hathcoin.TransactionHeader result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public rpc.Hathcoin.TransactionHeader buildPartial() {
        rpc.Hathcoin.TransactionHeader result = new rpc.Hathcoin.TransactionHeader(this);
        result.from_ = from_;
        result.to_ = to_;
        result.timestamp_ = timestamp_;
        result.payloadHash_ = payloadHash_;
        result.payloadLength_ = payloadLength_;
        result.nonce_ = nonce_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof rpc.Hathcoin.TransactionHeader) {
          return mergeFrom((rpc.Hathcoin.TransactionHeader)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(rpc.Hathcoin.TransactionHeader other) {
        if (other == rpc.Hathcoin.TransactionHeader.getDefaultInstance()) return this;
        if (other.getFrom() != com.google.protobuf.ByteString.EMPTY) {
          setFrom(other.getFrom());
        }
        if (other.getTo() != com.google.protobuf.ByteString.EMPTY) {
          setTo(other.getTo());
        }
        if (other.getTimestamp() != 0) {
          setTimestamp(other.getTimestamp());
        }
        if (other.getPayloadHash() != com.google.protobuf.ByteString.EMPTY) {
          setPayloadHash(other.getPayloadHash());
        }
        if (other.getPayloadLength() != 0) {
          setPayloadLength(other.getPayloadLength());
        }
        if (other.getNonce() != 0) {
          setNonce(other.getNonce());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        rpc.Hathcoin.TransactionHeader parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (rpc.Hathcoin.TransactionHeader) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.ByteString from_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes From = 1;</code>
       */
      public com.google.protobuf.ByteString getFrom() {
        return from_;
      }
      /**
       * <code>bytes From = 1;</code>
       */
      public Builder setFrom(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        from_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes From = 1;</code>
       */
      public Builder clearFrom() {
        
        from_ = getDefaultInstance().getFrom();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString to_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes To = 2;</code>
       */
      public com.google.protobuf.ByteString getTo() {
        return to_;
      }
      /**
       * <code>bytes To = 2;</code>
       */
      public Builder setTo(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        to_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes To = 2;</code>
       */
      public Builder clearTo() {
        
        to_ = getDefaultInstance().getTo();
        onChanged();
        return this;
      }

      private int timestamp_ ;
      /**
       * <code>uint32 Timestamp = 3;</code>
       */
      public int getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>uint32 Timestamp = 3;</code>
       */
      public Builder setTimestamp(int value) {
        
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 Timestamp = 3;</code>
       */
      public Builder clearTimestamp() {
        
        timestamp_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString payloadHash_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes PayloadHash = 4;</code>
       */
      public com.google.protobuf.ByteString getPayloadHash() {
        return payloadHash_;
      }
      /**
       * <code>bytes PayloadHash = 4;</code>
       */
      public Builder setPayloadHash(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        payloadHash_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes PayloadHash = 4;</code>
       */
      public Builder clearPayloadHash() {
        
        payloadHash_ = getDefaultInstance().getPayloadHash();
        onChanged();
        return this;
      }

      private int payloadLength_ ;
      /**
       * <code>uint32 PayloadLength = 5;</code>
       */
      public int getPayloadLength() {
        return payloadLength_;
      }
      /**
       * <code>uint32 PayloadLength = 5;</code>
       */
      public Builder setPayloadLength(int value) {
        
        payloadLength_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 PayloadLength = 5;</code>
       */
      public Builder clearPayloadLength() {
        
        payloadLength_ = 0;
        onChanged();
        return this;
      }

      private int nonce_ ;
      /**
       * <code>uint32 Nonce = 6;</code>
       */
      public int getNonce() {
        return nonce_;
      }
      /**
       * <code>uint32 Nonce = 6;</code>
       */
      public Builder setNonce(int value) {
        
        nonce_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 Nonce = 6;</code>
       */
      public Builder clearNonce() {
        
        nonce_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:rpc.TransactionHeader)
    }

    // @@protoc_insertion_point(class_scope:rpc.TransactionHeader)
    private static final rpc.Hathcoin.TransactionHeader DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new rpc.Hathcoin.TransactionHeader();
    }

    public static rpc.Hathcoin.TransactionHeader getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TransactionHeader>
        PARSER = new com.google.protobuf.AbstractParser<TransactionHeader>() {
      public TransactionHeader parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TransactionHeader(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TransactionHeader> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TransactionHeader> getParserForType() {
      return PARSER;
    }

    public rpc.Hathcoin.TransactionHeader getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TransactionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:rpc.Transaction)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.rpc.TransactionHeader Header = 1;</code>
     */
    boolean hasHeader();
    /**
     * <code>.rpc.TransactionHeader Header = 1;</code>
     */
    rpc.Hathcoin.TransactionHeader getHeader();
    /**
     * <code>.rpc.TransactionHeader Header = 1;</code>
     */
    rpc.Hathcoin.TransactionHeaderOrBuilder getHeaderOrBuilder();

    /**
     * <code>bytes Hash = 2;</code>
     */
    com.google.protobuf.ByteString getHash();

    /**
     * <code>bytes Payload = 3;</code>
     */
    com.google.protobuf.ByteString getPayload();
  }
  /**
   * Protobuf type {@code rpc.Transaction}
   */
  public  static final class Transaction extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:rpc.Transaction)
      TransactionOrBuilder {
    // Use Transaction.newBuilder() to construct.
    private Transaction(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Transaction() {
      hash_ = com.google.protobuf.ByteString.EMPTY;
      payload_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Transaction(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              rpc.Hathcoin.TransactionHeader.Builder subBuilder = null;
              if (header_ != null) {
                subBuilder = header_.toBuilder();
              }
              header_ = input.readMessage(rpc.Hathcoin.TransactionHeader.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(header_);
                header_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {

              hash_ = input.readBytes();
              break;
            }
            case 26: {

              payload_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return rpc.Hathcoin.internal_static_rpc_Transaction_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return rpc.Hathcoin.internal_static_rpc_Transaction_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              rpc.Hathcoin.Transaction.class, rpc.Hathcoin.Transaction.Builder.class);
    }

    public static final int HEADER_FIELD_NUMBER = 1;
    private rpc.Hathcoin.TransactionHeader header_;
    /**
     * <code>.rpc.TransactionHeader Header = 1;</code>
     */
    public boolean hasHeader() {
      return header_ != null;
    }
    /**
     * <code>.rpc.TransactionHeader Header = 1;</code>
     */
    public rpc.Hathcoin.TransactionHeader getHeader() {
      return header_ == null ? rpc.Hathcoin.TransactionHeader.getDefaultInstance() : header_;
    }
    /**
     * <code>.rpc.TransactionHeader Header = 1;</code>
     */
    public rpc.Hathcoin.TransactionHeaderOrBuilder getHeaderOrBuilder() {
      return getHeader();
    }

    public static final int HASH_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString hash_;
    /**
     * <code>bytes Hash = 2;</code>
     */
    public com.google.protobuf.ByteString getHash() {
      return hash_;
    }

    public static final int PAYLOAD_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString payload_;
    /**
     * <code>bytes Payload = 3;</code>
     */
    public com.google.protobuf.ByteString getPayload() {
      return payload_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (header_ != null) {
        output.writeMessage(1, getHeader());
      }
      if (!hash_.isEmpty()) {
        output.writeBytes(2, hash_);
      }
      if (!payload_.isEmpty()) {
        output.writeBytes(3, payload_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (header_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHeader());
      }
      if (!hash_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, hash_);
      }
      if (!payload_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, payload_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof rpc.Hathcoin.Transaction)) {
        return super.equals(obj);
      }
      rpc.Hathcoin.Transaction other = (rpc.Hathcoin.Transaction) obj;

      boolean result = true;
      result = result && (hasHeader() == other.hasHeader());
      if (hasHeader()) {
        result = result && getHeader()
            .equals(other.getHeader());
      }
      result = result && getHash()
          .equals(other.getHash());
      result = result && getPayload()
          .equals(other.getPayload());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasHeader()) {
        hash = (37 * hash) + HEADER_FIELD_NUMBER;
        hash = (53 * hash) + getHeader().hashCode();
      }
      hash = (37 * hash) + HASH_FIELD_NUMBER;
      hash = (53 * hash) + getHash().hashCode();
      hash = (37 * hash) + PAYLOAD_FIELD_NUMBER;
      hash = (53 * hash) + getPayload().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static rpc.Hathcoin.Transaction parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rpc.Hathcoin.Transaction parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rpc.Hathcoin.Transaction parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rpc.Hathcoin.Transaction parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rpc.Hathcoin.Transaction parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rpc.Hathcoin.Transaction parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rpc.Hathcoin.Transaction parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static rpc.Hathcoin.Transaction parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static rpc.Hathcoin.Transaction parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static rpc.Hathcoin.Transaction parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static rpc.Hathcoin.Transaction parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static rpc.Hathcoin.Transaction parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(rpc.Hathcoin.Transaction prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code rpc.Transaction}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:rpc.Transaction)
        rpc.Hathcoin.TransactionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return rpc.Hathcoin.internal_static_rpc_Transaction_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return rpc.Hathcoin.internal_static_rpc_Transaction_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                rpc.Hathcoin.Transaction.class, rpc.Hathcoin.Transaction.Builder.class);
      }

      // Construct using rpc.Hathcoin.Transaction.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (headerBuilder_ == null) {
          header_ = null;
        } else {
          header_ = null;
          headerBuilder_ = null;
        }
        hash_ = com.google.protobuf.ByteString.EMPTY;

        payload_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return rpc.Hathcoin.internal_static_rpc_Transaction_descriptor;
      }

      public rpc.Hathcoin.Transaction getDefaultInstanceForType() {
        return rpc.Hathcoin.Transaction.getDefaultInstance();
      }

      public rpc.Hathcoin.Transaction build() {
        rpc.Hathcoin.Transaction result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public rpc.Hathcoin.Transaction buildPartial() {
        rpc.Hathcoin.Transaction result = new rpc.Hathcoin.Transaction(this);
        if (headerBuilder_ == null) {
          result.header_ = header_;
        } else {
          result.header_ = headerBuilder_.build();
        }
        result.hash_ = hash_;
        result.payload_ = payload_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof rpc.Hathcoin.Transaction) {
          return mergeFrom((rpc.Hathcoin.Transaction)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(rpc.Hathcoin.Transaction other) {
        if (other == rpc.Hathcoin.Transaction.getDefaultInstance()) return this;
        if (other.hasHeader()) {
          mergeHeader(other.getHeader());
        }
        if (other.getHash() != com.google.protobuf.ByteString.EMPTY) {
          setHash(other.getHash());
        }
        if (other.getPayload() != com.google.protobuf.ByteString.EMPTY) {
          setPayload(other.getPayload());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        rpc.Hathcoin.Transaction parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (rpc.Hathcoin.Transaction) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private rpc.Hathcoin.TransactionHeader header_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          rpc.Hathcoin.TransactionHeader, rpc.Hathcoin.TransactionHeader.Builder, rpc.Hathcoin.TransactionHeaderOrBuilder> headerBuilder_;
      /**
       * <code>.rpc.TransactionHeader Header = 1;</code>
       */
      public boolean hasHeader() {
        return headerBuilder_ != null || header_ != null;
      }
      /**
       * <code>.rpc.TransactionHeader Header = 1;</code>
       */
      public rpc.Hathcoin.TransactionHeader getHeader() {
        if (headerBuilder_ == null) {
          return header_ == null ? rpc.Hathcoin.TransactionHeader.getDefaultInstance() : header_;
        } else {
          return headerBuilder_.getMessage();
        }
      }
      /**
       * <code>.rpc.TransactionHeader Header = 1;</code>
       */
      public Builder setHeader(rpc.Hathcoin.TransactionHeader value) {
        if (headerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          header_ = value;
          onChanged();
        } else {
          headerBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.rpc.TransactionHeader Header = 1;</code>
       */
      public Builder setHeader(
          rpc.Hathcoin.TransactionHeader.Builder builderForValue) {
        if (headerBuilder_ == null) {
          header_ = builderForValue.build();
          onChanged();
        } else {
          headerBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.rpc.TransactionHeader Header = 1;</code>
       */
      public Builder mergeHeader(rpc.Hathcoin.TransactionHeader value) {
        if (headerBuilder_ == null) {
          if (header_ != null) {
            header_ =
              rpc.Hathcoin.TransactionHeader.newBuilder(header_).mergeFrom(value).buildPartial();
          } else {
            header_ = value;
          }
          onChanged();
        } else {
          headerBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.rpc.TransactionHeader Header = 1;</code>
       */
      public Builder clearHeader() {
        if (headerBuilder_ == null) {
          header_ = null;
          onChanged();
        } else {
          header_ = null;
          headerBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.rpc.TransactionHeader Header = 1;</code>
       */
      public rpc.Hathcoin.TransactionHeader.Builder getHeaderBuilder() {
        
        onChanged();
        return getHeaderFieldBuilder().getBuilder();
      }
      /**
       * <code>.rpc.TransactionHeader Header = 1;</code>
       */
      public rpc.Hathcoin.TransactionHeaderOrBuilder getHeaderOrBuilder() {
        if (headerBuilder_ != null) {
          return headerBuilder_.getMessageOrBuilder();
        } else {
          return header_ == null ?
              rpc.Hathcoin.TransactionHeader.getDefaultInstance() : header_;
        }
      }
      /**
       * <code>.rpc.TransactionHeader Header = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          rpc.Hathcoin.TransactionHeader, rpc.Hathcoin.TransactionHeader.Builder, rpc.Hathcoin.TransactionHeaderOrBuilder> 
          getHeaderFieldBuilder() {
        if (headerBuilder_ == null) {
          headerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              rpc.Hathcoin.TransactionHeader, rpc.Hathcoin.TransactionHeader.Builder, rpc.Hathcoin.TransactionHeaderOrBuilder>(
                  getHeader(),
                  getParentForChildren(),
                  isClean());
          header_ = null;
        }
        return headerBuilder_;
      }

      private com.google.protobuf.ByteString hash_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes Hash = 2;</code>
       */
      public com.google.protobuf.ByteString getHash() {
        return hash_;
      }
      /**
       * <code>bytes Hash = 2;</code>
       */
      public Builder setHash(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        hash_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes Hash = 2;</code>
       */
      public Builder clearHash() {
        
        hash_ = getDefaultInstance().getHash();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString payload_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes Payload = 3;</code>
       */
      public com.google.protobuf.ByteString getPayload() {
        return payload_;
      }
      /**
       * <code>bytes Payload = 3;</code>
       */
      public Builder setPayload(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        payload_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes Payload = 3;</code>
       */
      public Builder clearPayload() {
        
        payload_ = getDefaultInstance().getPayload();
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:rpc.Transaction)
    }

    // @@protoc_insertion_point(class_scope:rpc.Transaction)
    private static final rpc.Hathcoin.Transaction DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new rpc.Hathcoin.Transaction();
    }

    public static rpc.Hathcoin.Transaction getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Transaction>
        PARSER = new com.google.protobuf.AbstractParser<Transaction>() {
      public Transaction parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Transaction(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Transaction> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Transaction> getParserForType() {
      return PARSER;
    }

    public rpc.Hathcoin.Transaction getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BlockHeaderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:rpc.BlockHeader)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 Version = 1;</code>
     */
    int getVersion();

    /**
     * <code>bytes Origin = 2;</code>
     */
    com.google.protobuf.ByteString getOrigin();

    /**
     * <code>bytes PrevHash = 3;</code>
     */
    com.google.protobuf.ByteString getPrevHash();

    /**
     * <code>bytes MerkelRoot = 4;</code>
     */
    com.google.protobuf.ByteString getMerkelRoot();

    /**
     * <code>uint32 Timestamp = 5;</code>
     */
    int getTimestamp();

    /**
     * <code>uint32 Nonce = 6;</code>
     */
    int getNonce();
  }
  /**
   * Protobuf type {@code rpc.BlockHeader}
   */
  public  static final class BlockHeader extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:rpc.BlockHeader)
      BlockHeaderOrBuilder {
    // Use BlockHeader.newBuilder() to construct.
    private BlockHeader(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BlockHeader() {
      version_ = 0;
      origin_ = com.google.protobuf.ByteString.EMPTY;
      prevHash_ = com.google.protobuf.ByteString.EMPTY;
      merkelRoot_ = com.google.protobuf.ByteString.EMPTY;
      timestamp_ = 0;
      nonce_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private BlockHeader(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              version_ = input.readInt32();
              break;
            }
            case 18: {

              origin_ = input.readBytes();
              break;
            }
            case 26: {

              prevHash_ = input.readBytes();
              break;
            }
            case 34: {

              merkelRoot_ = input.readBytes();
              break;
            }
            case 40: {

              timestamp_ = input.readUInt32();
              break;
            }
            case 48: {

              nonce_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return rpc.Hathcoin.internal_static_rpc_BlockHeader_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return rpc.Hathcoin.internal_static_rpc_BlockHeader_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              rpc.Hathcoin.BlockHeader.class, rpc.Hathcoin.BlockHeader.Builder.class);
    }

    public static final int VERSION_FIELD_NUMBER = 1;
    private int version_;
    /**
     * <code>int32 Version = 1;</code>
     */
    public int getVersion() {
      return version_;
    }

    public static final int ORIGIN_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString origin_;
    /**
     * <code>bytes Origin = 2;</code>
     */
    public com.google.protobuf.ByteString getOrigin() {
      return origin_;
    }

    public static final int PREVHASH_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString prevHash_;
    /**
     * <code>bytes PrevHash = 3;</code>
     */
    public com.google.protobuf.ByteString getPrevHash() {
      return prevHash_;
    }

    public static final int MERKELROOT_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString merkelRoot_;
    /**
     * <code>bytes MerkelRoot = 4;</code>
     */
    public com.google.protobuf.ByteString getMerkelRoot() {
      return merkelRoot_;
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 5;
    private int timestamp_;
    /**
     * <code>uint32 Timestamp = 5;</code>
     */
    public int getTimestamp() {
      return timestamp_;
    }

    public static final int NONCE_FIELD_NUMBER = 6;
    private int nonce_;
    /**
     * <code>uint32 Nonce = 6;</code>
     */
    public int getNonce() {
      return nonce_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (version_ != 0) {
        output.writeInt32(1, version_);
      }
      if (!origin_.isEmpty()) {
        output.writeBytes(2, origin_);
      }
      if (!prevHash_.isEmpty()) {
        output.writeBytes(3, prevHash_);
      }
      if (!merkelRoot_.isEmpty()) {
        output.writeBytes(4, merkelRoot_);
      }
      if (timestamp_ != 0) {
        output.writeUInt32(5, timestamp_);
      }
      if (nonce_ != 0) {
        output.writeUInt32(6, nonce_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (version_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, version_);
      }
      if (!origin_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, origin_);
      }
      if (!prevHash_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, prevHash_);
      }
      if (!merkelRoot_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, merkelRoot_);
      }
      if (timestamp_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, timestamp_);
      }
      if (nonce_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, nonce_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof rpc.Hathcoin.BlockHeader)) {
        return super.equals(obj);
      }
      rpc.Hathcoin.BlockHeader other = (rpc.Hathcoin.BlockHeader) obj;

      boolean result = true;
      result = result && (getVersion()
          == other.getVersion());
      result = result && getOrigin()
          .equals(other.getOrigin());
      result = result && getPrevHash()
          .equals(other.getPrevHash());
      result = result && getMerkelRoot()
          .equals(other.getMerkelRoot());
      result = result && (getTimestamp()
          == other.getTimestamp());
      result = result && (getNonce()
          == other.getNonce());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getVersion();
      hash = (37 * hash) + ORIGIN_FIELD_NUMBER;
      hash = (53 * hash) + getOrigin().hashCode();
      hash = (37 * hash) + PREVHASH_FIELD_NUMBER;
      hash = (53 * hash) + getPrevHash().hashCode();
      hash = (37 * hash) + MERKELROOT_FIELD_NUMBER;
      hash = (53 * hash) + getMerkelRoot().hashCode();
      hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
      hash = (53 * hash) + getTimestamp();
      hash = (37 * hash) + NONCE_FIELD_NUMBER;
      hash = (53 * hash) + getNonce();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static rpc.Hathcoin.BlockHeader parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rpc.Hathcoin.BlockHeader parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rpc.Hathcoin.BlockHeader parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rpc.Hathcoin.BlockHeader parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rpc.Hathcoin.BlockHeader parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rpc.Hathcoin.BlockHeader parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rpc.Hathcoin.BlockHeader parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static rpc.Hathcoin.BlockHeader parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static rpc.Hathcoin.BlockHeader parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static rpc.Hathcoin.BlockHeader parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static rpc.Hathcoin.BlockHeader parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static rpc.Hathcoin.BlockHeader parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(rpc.Hathcoin.BlockHeader prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code rpc.BlockHeader}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:rpc.BlockHeader)
        rpc.Hathcoin.BlockHeaderOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return rpc.Hathcoin.internal_static_rpc_BlockHeader_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return rpc.Hathcoin.internal_static_rpc_BlockHeader_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                rpc.Hathcoin.BlockHeader.class, rpc.Hathcoin.BlockHeader.Builder.class);
      }

      // Construct using rpc.Hathcoin.BlockHeader.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        version_ = 0;

        origin_ = com.google.protobuf.ByteString.EMPTY;

        prevHash_ = com.google.protobuf.ByteString.EMPTY;

        merkelRoot_ = com.google.protobuf.ByteString.EMPTY;

        timestamp_ = 0;

        nonce_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return rpc.Hathcoin.internal_static_rpc_BlockHeader_descriptor;
      }

      public rpc.Hathcoin.BlockHeader getDefaultInstanceForType() {
        return rpc.Hathcoin.BlockHeader.getDefaultInstance();
      }

      public rpc.Hathcoin.BlockHeader build() {
        rpc.Hathcoin.BlockHeader result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public rpc.Hathcoin.BlockHeader buildPartial() {
        rpc.Hathcoin.BlockHeader result = new rpc.Hathcoin.BlockHeader(this);
        result.version_ = version_;
        result.origin_ = origin_;
        result.prevHash_ = prevHash_;
        result.merkelRoot_ = merkelRoot_;
        result.timestamp_ = timestamp_;
        result.nonce_ = nonce_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof rpc.Hathcoin.BlockHeader) {
          return mergeFrom((rpc.Hathcoin.BlockHeader)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(rpc.Hathcoin.BlockHeader other) {
        if (other == rpc.Hathcoin.BlockHeader.getDefaultInstance()) return this;
        if (other.getVersion() != 0) {
          setVersion(other.getVersion());
        }
        if (other.getOrigin() != com.google.protobuf.ByteString.EMPTY) {
          setOrigin(other.getOrigin());
        }
        if (other.getPrevHash() != com.google.protobuf.ByteString.EMPTY) {
          setPrevHash(other.getPrevHash());
        }
        if (other.getMerkelRoot() != com.google.protobuf.ByteString.EMPTY) {
          setMerkelRoot(other.getMerkelRoot());
        }
        if (other.getTimestamp() != 0) {
          setTimestamp(other.getTimestamp());
        }
        if (other.getNonce() != 0) {
          setNonce(other.getNonce());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        rpc.Hathcoin.BlockHeader parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (rpc.Hathcoin.BlockHeader) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int version_ ;
      /**
       * <code>int32 Version = 1;</code>
       */
      public int getVersion() {
        return version_;
      }
      /**
       * <code>int32 Version = 1;</code>
       */
      public Builder setVersion(int value) {
        
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 Version = 1;</code>
       */
      public Builder clearVersion() {
        
        version_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString origin_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes Origin = 2;</code>
       */
      public com.google.protobuf.ByteString getOrigin() {
        return origin_;
      }
      /**
       * <code>bytes Origin = 2;</code>
       */
      public Builder setOrigin(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        origin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes Origin = 2;</code>
       */
      public Builder clearOrigin() {
        
        origin_ = getDefaultInstance().getOrigin();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString prevHash_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes PrevHash = 3;</code>
       */
      public com.google.protobuf.ByteString getPrevHash() {
        return prevHash_;
      }
      /**
       * <code>bytes PrevHash = 3;</code>
       */
      public Builder setPrevHash(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        prevHash_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes PrevHash = 3;</code>
       */
      public Builder clearPrevHash() {
        
        prevHash_ = getDefaultInstance().getPrevHash();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString merkelRoot_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes MerkelRoot = 4;</code>
       */
      public com.google.protobuf.ByteString getMerkelRoot() {
        return merkelRoot_;
      }
      /**
       * <code>bytes MerkelRoot = 4;</code>
       */
      public Builder setMerkelRoot(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        merkelRoot_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes MerkelRoot = 4;</code>
       */
      public Builder clearMerkelRoot() {
        
        merkelRoot_ = getDefaultInstance().getMerkelRoot();
        onChanged();
        return this;
      }

      private int timestamp_ ;
      /**
       * <code>uint32 Timestamp = 5;</code>
       */
      public int getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>uint32 Timestamp = 5;</code>
       */
      public Builder setTimestamp(int value) {
        
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 Timestamp = 5;</code>
       */
      public Builder clearTimestamp() {
        
        timestamp_ = 0;
        onChanged();
        return this;
      }

      private int nonce_ ;
      /**
       * <code>uint32 Nonce = 6;</code>
       */
      public int getNonce() {
        return nonce_;
      }
      /**
       * <code>uint32 Nonce = 6;</code>
       */
      public Builder setNonce(int value) {
        
        nonce_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 Nonce = 6;</code>
       */
      public Builder clearNonce() {
        
        nonce_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:rpc.BlockHeader)
    }

    // @@protoc_insertion_point(class_scope:rpc.BlockHeader)
    private static final rpc.Hathcoin.BlockHeader DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new rpc.Hathcoin.BlockHeader();
    }

    public static rpc.Hathcoin.BlockHeader getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BlockHeader>
        PARSER = new com.google.protobuf.AbstractParser<BlockHeader>() {
      public BlockHeader parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new BlockHeader(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BlockHeader> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BlockHeader> getParserForType() {
      return PARSER;
    }

    public rpc.Hathcoin.BlockHeader getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BlockOrBuilder extends
      // @@protoc_insertion_point(interface_extends:rpc.Block)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.rpc.BlockHeader BlockHeader = 1;</code>
     */
    boolean hasBlockHeader();
    /**
     * <code>.rpc.BlockHeader BlockHeader = 1;</code>
     */
    rpc.Hathcoin.BlockHeader getBlockHeader();
    /**
     * <code>.rpc.BlockHeader BlockHeader = 1;</code>
     */
    rpc.Hathcoin.BlockHeaderOrBuilder getBlockHeaderOrBuilder();

    /**
     * <code>bytes Hash = 2;</code>
     */
    com.google.protobuf.ByteString getHash();

    /**
     * <code>repeated .rpc.Transaction Transaction = 3;</code>
     */
    java.util.List<rpc.Hathcoin.Transaction> 
        getTransactionList();
    /**
     * <code>repeated .rpc.Transaction Transaction = 3;</code>
     */
    rpc.Hathcoin.Transaction getTransaction(int index);
    /**
     * <code>repeated .rpc.Transaction Transaction = 3;</code>
     */
    int getTransactionCount();
    /**
     * <code>repeated .rpc.Transaction Transaction = 3;</code>
     */
    java.util.List<? extends rpc.Hathcoin.TransactionOrBuilder> 
        getTransactionOrBuilderList();
    /**
     * <code>repeated .rpc.Transaction Transaction = 3;</code>
     */
    rpc.Hathcoin.TransactionOrBuilder getTransactionOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code rpc.Block}
   */
  public  static final class Block extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:rpc.Block)
      BlockOrBuilder {
    // Use Block.newBuilder() to construct.
    private Block(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Block() {
      hash_ = com.google.protobuf.ByteString.EMPTY;
      transaction_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Block(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              rpc.Hathcoin.BlockHeader.Builder subBuilder = null;
              if (blockHeader_ != null) {
                subBuilder = blockHeader_.toBuilder();
              }
              blockHeader_ = input.readMessage(rpc.Hathcoin.BlockHeader.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(blockHeader_);
                blockHeader_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {

              hash_ = input.readBytes();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                transaction_ = new java.util.ArrayList<rpc.Hathcoin.Transaction>();
                mutable_bitField0_ |= 0x00000004;
              }
              transaction_.add(
                  input.readMessage(rpc.Hathcoin.Transaction.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          transaction_ = java.util.Collections.unmodifiableList(transaction_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return rpc.Hathcoin.internal_static_rpc_Block_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return rpc.Hathcoin.internal_static_rpc_Block_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              rpc.Hathcoin.Block.class, rpc.Hathcoin.Block.Builder.class);
    }

    private int bitField0_;
    public static final int BLOCKHEADER_FIELD_NUMBER = 1;
    private rpc.Hathcoin.BlockHeader blockHeader_;
    /**
     * <code>.rpc.BlockHeader BlockHeader = 1;</code>
     */
    public boolean hasBlockHeader() {
      return blockHeader_ != null;
    }
    /**
     * <code>.rpc.BlockHeader BlockHeader = 1;</code>
     */
    public rpc.Hathcoin.BlockHeader getBlockHeader() {
      return blockHeader_ == null ? rpc.Hathcoin.BlockHeader.getDefaultInstance() : blockHeader_;
    }
    /**
     * <code>.rpc.BlockHeader BlockHeader = 1;</code>
     */
    public rpc.Hathcoin.BlockHeaderOrBuilder getBlockHeaderOrBuilder() {
      return getBlockHeader();
    }

    public static final int HASH_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString hash_;
    /**
     * <code>bytes Hash = 2;</code>
     */
    public com.google.protobuf.ByteString getHash() {
      return hash_;
    }

    public static final int TRANSACTION_FIELD_NUMBER = 3;
    private java.util.List<rpc.Hathcoin.Transaction> transaction_;
    /**
     * <code>repeated .rpc.Transaction Transaction = 3;</code>
     */
    public java.util.List<rpc.Hathcoin.Transaction> getTransactionList() {
      return transaction_;
    }
    /**
     * <code>repeated .rpc.Transaction Transaction = 3;</code>
     */
    public java.util.List<? extends rpc.Hathcoin.TransactionOrBuilder> 
        getTransactionOrBuilderList() {
      return transaction_;
    }
    /**
     * <code>repeated .rpc.Transaction Transaction = 3;</code>
     */
    public int getTransactionCount() {
      return transaction_.size();
    }
    /**
     * <code>repeated .rpc.Transaction Transaction = 3;</code>
     */
    public rpc.Hathcoin.Transaction getTransaction(int index) {
      return transaction_.get(index);
    }
    /**
     * <code>repeated .rpc.Transaction Transaction = 3;</code>
     */
    public rpc.Hathcoin.TransactionOrBuilder getTransactionOrBuilder(
        int index) {
      return transaction_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (blockHeader_ != null) {
        output.writeMessage(1, getBlockHeader());
      }
      if (!hash_.isEmpty()) {
        output.writeBytes(2, hash_);
      }
      for (int i = 0; i < transaction_.size(); i++) {
        output.writeMessage(3, transaction_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (blockHeader_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getBlockHeader());
      }
      if (!hash_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, hash_);
      }
      for (int i = 0; i < transaction_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, transaction_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof rpc.Hathcoin.Block)) {
        return super.equals(obj);
      }
      rpc.Hathcoin.Block other = (rpc.Hathcoin.Block) obj;

      boolean result = true;
      result = result && (hasBlockHeader() == other.hasBlockHeader());
      if (hasBlockHeader()) {
        result = result && getBlockHeader()
            .equals(other.getBlockHeader());
      }
      result = result && getHash()
          .equals(other.getHash());
      result = result && getTransactionList()
          .equals(other.getTransactionList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasBlockHeader()) {
        hash = (37 * hash) + BLOCKHEADER_FIELD_NUMBER;
        hash = (53 * hash) + getBlockHeader().hashCode();
      }
      hash = (37 * hash) + HASH_FIELD_NUMBER;
      hash = (53 * hash) + getHash().hashCode();
      if (getTransactionCount() > 0) {
        hash = (37 * hash) + TRANSACTION_FIELD_NUMBER;
        hash = (53 * hash) + getTransactionList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static rpc.Hathcoin.Block parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rpc.Hathcoin.Block parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rpc.Hathcoin.Block parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rpc.Hathcoin.Block parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rpc.Hathcoin.Block parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rpc.Hathcoin.Block parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rpc.Hathcoin.Block parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static rpc.Hathcoin.Block parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static rpc.Hathcoin.Block parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static rpc.Hathcoin.Block parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static rpc.Hathcoin.Block parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static rpc.Hathcoin.Block parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(rpc.Hathcoin.Block prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code rpc.Block}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:rpc.Block)
        rpc.Hathcoin.BlockOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return rpc.Hathcoin.internal_static_rpc_Block_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return rpc.Hathcoin.internal_static_rpc_Block_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                rpc.Hathcoin.Block.class, rpc.Hathcoin.Block.Builder.class);
      }

      // Construct using rpc.Hathcoin.Block.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTransactionFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (blockHeaderBuilder_ == null) {
          blockHeader_ = null;
        } else {
          blockHeader_ = null;
          blockHeaderBuilder_ = null;
        }
        hash_ = com.google.protobuf.ByteString.EMPTY;

        if (transactionBuilder_ == null) {
          transaction_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          transactionBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return rpc.Hathcoin.internal_static_rpc_Block_descriptor;
      }

      public rpc.Hathcoin.Block getDefaultInstanceForType() {
        return rpc.Hathcoin.Block.getDefaultInstance();
      }

      public rpc.Hathcoin.Block build() {
        rpc.Hathcoin.Block result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public rpc.Hathcoin.Block buildPartial() {
        rpc.Hathcoin.Block result = new rpc.Hathcoin.Block(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (blockHeaderBuilder_ == null) {
          result.blockHeader_ = blockHeader_;
        } else {
          result.blockHeader_ = blockHeaderBuilder_.build();
        }
        result.hash_ = hash_;
        if (transactionBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            transaction_ = java.util.Collections.unmodifiableList(transaction_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.transaction_ = transaction_;
        } else {
          result.transaction_ = transactionBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof rpc.Hathcoin.Block) {
          return mergeFrom((rpc.Hathcoin.Block)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(rpc.Hathcoin.Block other) {
        if (other == rpc.Hathcoin.Block.getDefaultInstance()) return this;
        if (other.hasBlockHeader()) {
          mergeBlockHeader(other.getBlockHeader());
        }
        if (other.getHash() != com.google.protobuf.ByteString.EMPTY) {
          setHash(other.getHash());
        }
        if (transactionBuilder_ == null) {
          if (!other.transaction_.isEmpty()) {
            if (transaction_.isEmpty()) {
              transaction_ = other.transaction_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureTransactionIsMutable();
              transaction_.addAll(other.transaction_);
            }
            onChanged();
          }
        } else {
          if (!other.transaction_.isEmpty()) {
            if (transactionBuilder_.isEmpty()) {
              transactionBuilder_.dispose();
              transactionBuilder_ = null;
              transaction_ = other.transaction_;
              bitField0_ = (bitField0_ & ~0x00000004);
              transactionBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTransactionFieldBuilder() : null;
            } else {
              transactionBuilder_.addAllMessages(other.transaction_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        rpc.Hathcoin.Block parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (rpc.Hathcoin.Block) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private rpc.Hathcoin.BlockHeader blockHeader_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          rpc.Hathcoin.BlockHeader, rpc.Hathcoin.BlockHeader.Builder, rpc.Hathcoin.BlockHeaderOrBuilder> blockHeaderBuilder_;
      /**
       * <code>.rpc.BlockHeader BlockHeader = 1;</code>
       */
      public boolean hasBlockHeader() {
        return blockHeaderBuilder_ != null || blockHeader_ != null;
      }
      /**
       * <code>.rpc.BlockHeader BlockHeader = 1;</code>
       */
      public rpc.Hathcoin.BlockHeader getBlockHeader() {
        if (blockHeaderBuilder_ == null) {
          return blockHeader_ == null ? rpc.Hathcoin.BlockHeader.getDefaultInstance() : blockHeader_;
        } else {
          return blockHeaderBuilder_.getMessage();
        }
      }
      /**
       * <code>.rpc.BlockHeader BlockHeader = 1;</code>
       */
      public Builder setBlockHeader(rpc.Hathcoin.BlockHeader value) {
        if (blockHeaderBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          blockHeader_ = value;
          onChanged();
        } else {
          blockHeaderBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.rpc.BlockHeader BlockHeader = 1;</code>
       */
      public Builder setBlockHeader(
          rpc.Hathcoin.BlockHeader.Builder builderForValue) {
        if (blockHeaderBuilder_ == null) {
          blockHeader_ = builderForValue.build();
          onChanged();
        } else {
          blockHeaderBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.rpc.BlockHeader BlockHeader = 1;</code>
       */
      public Builder mergeBlockHeader(rpc.Hathcoin.BlockHeader value) {
        if (blockHeaderBuilder_ == null) {
          if (blockHeader_ != null) {
            blockHeader_ =
              rpc.Hathcoin.BlockHeader.newBuilder(blockHeader_).mergeFrom(value).buildPartial();
          } else {
            blockHeader_ = value;
          }
          onChanged();
        } else {
          blockHeaderBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.rpc.BlockHeader BlockHeader = 1;</code>
       */
      public Builder clearBlockHeader() {
        if (blockHeaderBuilder_ == null) {
          blockHeader_ = null;
          onChanged();
        } else {
          blockHeader_ = null;
          blockHeaderBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.rpc.BlockHeader BlockHeader = 1;</code>
       */
      public rpc.Hathcoin.BlockHeader.Builder getBlockHeaderBuilder() {
        
        onChanged();
        return getBlockHeaderFieldBuilder().getBuilder();
      }
      /**
       * <code>.rpc.BlockHeader BlockHeader = 1;</code>
       */
      public rpc.Hathcoin.BlockHeaderOrBuilder getBlockHeaderOrBuilder() {
        if (blockHeaderBuilder_ != null) {
          return blockHeaderBuilder_.getMessageOrBuilder();
        } else {
          return blockHeader_ == null ?
              rpc.Hathcoin.BlockHeader.getDefaultInstance() : blockHeader_;
        }
      }
      /**
       * <code>.rpc.BlockHeader BlockHeader = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          rpc.Hathcoin.BlockHeader, rpc.Hathcoin.BlockHeader.Builder, rpc.Hathcoin.BlockHeaderOrBuilder> 
          getBlockHeaderFieldBuilder() {
        if (blockHeaderBuilder_ == null) {
          blockHeaderBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              rpc.Hathcoin.BlockHeader, rpc.Hathcoin.BlockHeader.Builder, rpc.Hathcoin.BlockHeaderOrBuilder>(
                  getBlockHeader(),
                  getParentForChildren(),
                  isClean());
          blockHeader_ = null;
        }
        return blockHeaderBuilder_;
      }

      private com.google.protobuf.ByteString hash_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes Hash = 2;</code>
       */
      public com.google.protobuf.ByteString getHash() {
        return hash_;
      }
      /**
       * <code>bytes Hash = 2;</code>
       */
      public Builder setHash(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        hash_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes Hash = 2;</code>
       */
      public Builder clearHash() {
        
        hash_ = getDefaultInstance().getHash();
        onChanged();
        return this;
      }

      private java.util.List<rpc.Hathcoin.Transaction> transaction_ =
        java.util.Collections.emptyList();
      private void ensureTransactionIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          transaction_ = new java.util.ArrayList<rpc.Hathcoin.Transaction>(transaction_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          rpc.Hathcoin.Transaction, rpc.Hathcoin.Transaction.Builder, rpc.Hathcoin.TransactionOrBuilder> transactionBuilder_;

      /**
       * <code>repeated .rpc.Transaction Transaction = 3;</code>
       */
      public java.util.List<rpc.Hathcoin.Transaction> getTransactionList() {
        if (transactionBuilder_ == null) {
          return java.util.Collections.unmodifiableList(transaction_);
        } else {
          return transactionBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .rpc.Transaction Transaction = 3;</code>
       */
      public int getTransactionCount() {
        if (transactionBuilder_ == null) {
          return transaction_.size();
        } else {
          return transactionBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .rpc.Transaction Transaction = 3;</code>
       */
      public rpc.Hathcoin.Transaction getTransaction(int index) {
        if (transactionBuilder_ == null) {
          return transaction_.get(index);
        } else {
          return transactionBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .rpc.Transaction Transaction = 3;</code>
       */
      public Builder setTransaction(
          int index, rpc.Hathcoin.Transaction value) {
        if (transactionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTransactionIsMutable();
          transaction_.set(index, value);
          onChanged();
        } else {
          transactionBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .rpc.Transaction Transaction = 3;</code>
       */
      public Builder setTransaction(
          int index, rpc.Hathcoin.Transaction.Builder builderForValue) {
        if (transactionBuilder_ == null) {
          ensureTransactionIsMutable();
          transaction_.set(index, builderForValue.build());
          onChanged();
        } else {
          transactionBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .rpc.Transaction Transaction = 3;</code>
       */
      public Builder addTransaction(rpc.Hathcoin.Transaction value) {
        if (transactionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTransactionIsMutable();
          transaction_.add(value);
          onChanged();
        } else {
          transactionBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .rpc.Transaction Transaction = 3;</code>
       */
      public Builder addTransaction(
          int index, rpc.Hathcoin.Transaction value) {
        if (transactionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTransactionIsMutable();
          transaction_.add(index, value);
          onChanged();
        } else {
          transactionBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .rpc.Transaction Transaction = 3;</code>
       */
      public Builder addTransaction(
          rpc.Hathcoin.Transaction.Builder builderForValue) {
        if (transactionBuilder_ == null) {
          ensureTransactionIsMutable();
          transaction_.add(builderForValue.build());
          onChanged();
        } else {
          transactionBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .rpc.Transaction Transaction = 3;</code>
       */
      public Builder addTransaction(
          int index, rpc.Hathcoin.Transaction.Builder builderForValue) {
        if (transactionBuilder_ == null) {
          ensureTransactionIsMutable();
          transaction_.add(index, builderForValue.build());
          onChanged();
        } else {
          transactionBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .rpc.Transaction Transaction = 3;</code>
       */
      public Builder addAllTransaction(
          java.lang.Iterable<? extends rpc.Hathcoin.Transaction> values) {
        if (transactionBuilder_ == null) {
          ensureTransactionIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, transaction_);
          onChanged();
        } else {
          transactionBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .rpc.Transaction Transaction = 3;</code>
       */
      public Builder clearTransaction() {
        if (transactionBuilder_ == null) {
          transaction_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          transactionBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .rpc.Transaction Transaction = 3;</code>
       */
      public Builder removeTransaction(int index) {
        if (transactionBuilder_ == null) {
          ensureTransactionIsMutable();
          transaction_.remove(index);
          onChanged();
        } else {
          transactionBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .rpc.Transaction Transaction = 3;</code>
       */
      public rpc.Hathcoin.Transaction.Builder getTransactionBuilder(
          int index) {
        return getTransactionFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .rpc.Transaction Transaction = 3;</code>
       */
      public rpc.Hathcoin.TransactionOrBuilder getTransactionOrBuilder(
          int index) {
        if (transactionBuilder_ == null) {
          return transaction_.get(index);  } else {
          return transactionBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .rpc.Transaction Transaction = 3;</code>
       */
      public java.util.List<? extends rpc.Hathcoin.TransactionOrBuilder> 
           getTransactionOrBuilderList() {
        if (transactionBuilder_ != null) {
          return transactionBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(transaction_);
        }
      }
      /**
       * <code>repeated .rpc.Transaction Transaction = 3;</code>
       */
      public rpc.Hathcoin.Transaction.Builder addTransactionBuilder() {
        return getTransactionFieldBuilder().addBuilder(
            rpc.Hathcoin.Transaction.getDefaultInstance());
      }
      /**
       * <code>repeated .rpc.Transaction Transaction = 3;</code>
       */
      public rpc.Hathcoin.Transaction.Builder addTransactionBuilder(
          int index) {
        return getTransactionFieldBuilder().addBuilder(
            index, rpc.Hathcoin.Transaction.getDefaultInstance());
      }
      /**
       * <code>repeated .rpc.Transaction Transaction = 3;</code>
       */
      public java.util.List<rpc.Hathcoin.Transaction.Builder> 
           getTransactionBuilderList() {
        return getTransactionFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          rpc.Hathcoin.Transaction, rpc.Hathcoin.Transaction.Builder, rpc.Hathcoin.TransactionOrBuilder> 
          getTransactionFieldBuilder() {
        if (transactionBuilder_ == null) {
          transactionBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              rpc.Hathcoin.Transaction, rpc.Hathcoin.Transaction.Builder, rpc.Hathcoin.TransactionOrBuilder>(
                  transaction_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          transaction_ = null;
        }
        return transactionBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:rpc.Block)
    }

    // @@protoc_insertion_point(class_scope:rpc.Block)
    private static final rpc.Hathcoin.Block DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new rpc.Hathcoin.Block();
    }

    public static rpc.Hathcoin.Block getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Block>
        PARSER = new com.google.protobuf.AbstractParser<Block>() {
      public Block parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Block(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Block> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Block> getParserForType() {
      return PARSER;
    }

    public rpc.Hathcoin.Block getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PeerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:rpc.Peer)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string Addr = 1;</code>
     */
    java.lang.String getAddr();
    /**
     * <code>string Addr = 1;</code>
     */
    com.google.protobuf.ByteString
        getAddrBytes();

    /**
     * <code>string PublicKey = 2;</code>
     */
    java.lang.String getPublicKey();
    /**
     * <code>string PublicKey = 2;</code>
     */
    com.google.protobuf.ByteString
        getPublicKeyBytes();
  }
  /**
   * Protobuf type {@code rpc.Peer}
   */
  public  static final class Peer extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:rpc.Peer)
      PeerOrBuilder {
    // Use Peer.newBuilder() to construct.
    private Peer(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Peer() {
      addr_ = "";
      publicKey_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Peer(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              addr_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              publicKey_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return rpc.Hathcoin.internal_static_rpc_Peer_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return rpc.Hathcoin.internal_static_rpc_Peer_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              rpc.Hathcoin.Peer.class, rpc.Hathcoin.Peer.Builder.class);
    }

    public static final int ADDR_FIELD_NUMBER = 1;
    private volatile java.lang.Object addr_;
    /**
     * <code>string Addr = 1;</code>
     */
    public java.lang.String getAddr() {
      java.lang.Object ref = addr_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        addr_ = s;
        return s;
      }
    }
    /**
     * <code>string Addr = 1;</code>
     */
    public com.google.protobuf.ByteString
        getAddrBytes() {
      java.lang.Object ref = addr_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        addr_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PUBLICKEY_FIELD_NUMBER = 2;
    private volatile java.lang.Object publicKey_;
    /**
     * <code>string PublicKey = 2;</code>
     */
    public java.lang.String getPublicKey() {
      java.lang.Object ref = publicKey_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        publicKey_ = s;
        return s;
      }
    }
    /**
     * <code>string PublicKey = 2;</code>
     */
    public com.google.protobuf.ByteString
        getPublicKeyBytes() {
      java.lang.Object ref = publicKey_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        publicKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getAddrBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, addr_);
      }
      if (!getPublicKeyBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, publicKey_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getAddrBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, addr_);
      }
      if (!getPublicKeyBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, publicKey_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof rpc.Hathcoin.Peer)) {
        return super.equals(obj);
      }
      rpc.Hathcoin.Peer other = (rpc.Hathcoin.Peer) obj;

      boolean result = true;
      result = result && getAddr()
          .equals(other.getAddr());
      result = result && getPublicKey()
          .equals(other.getPublicKey());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ADDR_FIELD_NUMBER;
      hash = (53 * hash) + getAddr().hashCode();
      hash = (37 * hash) + PUBLICKEY_FIELD_NUMBER;
      hash = (53 * hash) + getPublicKey().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static rpc.Hathcoin.Peer parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rpc.Hathcoin.Peer parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rpc.Hathcoin.Peer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rpc.Hathcoin.Peer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rpc.Hathcoin.Peer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rpc.Hathcoin.Peer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rpc.Hathcoin.Peer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static rpc.Hathcoin.Peer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static rpc.Hathcoin.Peer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static rpc.Hathcoin.Peer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static rpc.Hathcoin.Peer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static rpc.Hathcoin.Peer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(rpc.Hathcoin.Peer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code rpc.Peer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:rpc.Peer)
        rpc.Hathcoin.PeerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return rpc.Hathcoin.internal_static_rpc_Peer_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return rpc.Hathcoin.internal_static_rpc_Peer_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                rpc.Hathcoin.Peer.class, rpc.Hathcoin.Peer.Builder.class);
      }

      // Construct using rpc.Hathcoin.Peer.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        addr_ = "";

        publicKey_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return rpc.Hathcoin.internal_static_rpc_Peer_descriptor;
      }

      public rpc.Hathcoin.Peer getDefaultInstanceForType() {
        return rpc.Hathcoin.Peer.getDefaultInstance();
      }

      public rpc.Hathcoin.Peer build() {
        rpc.Hathcoin.Peer result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public rpc.Hathcoin.Peer buildPartial() {
        rpc.Hathcoin.Peer result = new rpc.Hathcoin.Peer(this);
        result.addr_ = addr_;
        result.publicKey_ = publicKey_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof rpc.Hathcoin.Peer) {
          return mergeFrom((rpc.Hathcoin.Peer)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(rpc.Hathcoin.Peer other) {
        if (other == rpc.Hathcoin.Peer.getDefaultInstance()) return this;
        if (!other.getAddr().isEmpty()) {
          addr_ = other.addr_;
          onChanged();
        }
        if (!other.getPublicKey().isEmpty()) {
          publicKey_ = other.publicKey_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        rpc.Hathcoin.Peer parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (rpc.Hathcoin.Peer) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object addr_ = "";
      /**
       * <code>string Addr = 1;</code>
       */
      public java.lang.String getAddr() {
        java.lang.Object ref = addr_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          addr_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string Addr = 1;</code>
       */
      public com.google.protobuf.ByteString
          getAddrBytes() {
        java.lang.Object ref = addr_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          addr_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string Addr = 1;</code>
       */
      public Builder setAddr(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        addr_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string Addr = 1;</code>
       */
      public Builder clearAddr() {
        
        addr_ = getDefaultInstance().getAddr();
        onChanged();
        return this;
      }
      /**
       * <code>string Addr = 1;</code>
       */
      public Builder setAddrBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        addr_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object publicKey_ = "";
      /**
       * <code>string PublicKey = 2;</code>
       */
      public java.lang.String getPublicKey() {
        java.lang.Object ref = publicKey_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          publicKey_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string PublicKey = 2;</code>
       */
      public com.google.protobuf.ByteString
          getPublicKeyBytes() {
        java.lang.Object ref = publicKey_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          publicKey_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string PublicKey = 2;</code>
       */
      public Builder setPublicKey(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        publicKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string PublicKey = 2;</code>
       */
      public Builder clearPublicKey() {
        
        publicKey_ = getDefaultInstance().getPublicKey();
        onChanged();
        return this;
      }
      /**
       * <code>string PublicKey = 2;</code>
       */
      public Builder setPublicKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        publicKey_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:rpc.Peer)
    }

    // @@protoc_insertion_point(class_scope:rpc.Peer)
    private static final rpc.Hathcoin.Peer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new rpc.Hathcoin.Peer();
    }

    public static rpc.Hathcoin.Peer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Peer>
        PARSER = new com.google.protobuf.AbstractParser<Peer>() {
      public Peer parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Peer(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Peer> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Peer> getParserForType() {
      return PARSER;
    }

    public rpc.Hathcoin.Peer getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PeersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:rpc.Peers)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .rpc.Peer Peer = 1;</code>
     */
    java.util.List<rpc.Hathcoin.Peer> 
        getPeerList();
    /**
     * <code>repeated .rpc.Peer Peer = 1;</code>
     */
    rpc.Hathcoin.Peer getPeer(int index);
    /**
     * <code>repeated .rpc.Peer Peer = 1;</code>
     */
    int getPeerCount();
    /**
     * <code>repeated .rpc.Peer Peer = 1;</code>
     */
    java.util.List<? extends rpc.Hathcoin.PeerOrBuilder> 
        getPeerOrBuilderList();
    /**
     * <code>repeated .rpc.Peer Peer = 1;</code>
     */
    rpc.Hathcoin.PeerOrBuilder getPeerOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code rpc.Peers}
   */
  public  static final class Peers extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:rpc.Peers)
      PeersOrBuilder {
    // Use Peers.newBuilder() to construct.
    private Peers(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Peers() {
      peer_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Peers(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                peer_ = new java.util.ArrayList<rpc.Hathcoin.Peer>();
                mutable_bitField0_ |= 0x00000001;
              }
              peer_.add(
                  input.readMessage(rpc.Hathcoin.Peer.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          peer_ = java.util.Collections.unmodifiableList(peer_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return rpc.Hathcoin.internal_static_rpc_Peers_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return rpc.Hathcoin.internal_static_rpc_Peers_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              rpc.Hathcoin.Peers.class, rpc.Hathcoin.Peers.Builder.class);
    }

    public static final int PEER_FIELD_NUMBER = 1;
    private java.util.List<rpc.Hathcoin.Peer> peer_;
    /**
     * <code>repeated .rpc.Peer Peer = 1;</code>
     */
    public java.util.List<rpc.Hathcoin.Peer> getPeerList() {
      return peer_;
    }
    /**
     * <code>repeated .rpc.Peer Peer = 1;</code>
     */
    public java.util.List<? extends rpc.Hathcoin.PeerOrBuilder> 
        getPeerOrBuilderList() {
      return peer_;
    }
    /**
     * <code>repeated .rpc.Peer Peer = 1;</code>
     */
    public int getPeerCount() {
      return peer_.size();
    }
    /**
     * <code>repeated .rpc.Peer Peer = 1;</code>
     */
    public rpc.Hathcoin.Peer getPeer(int index) {
      return peer_.get(index);
    }
    /**
     * <code>repeated .rpc.Peer Peer = 1;</code>
     */
    public rpc.Hathcoin.PeerOrBuilder getPeerOrBuilder(
        int index) {
      return peer_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < peer_.size(); i++) {
        output.writeMessage(1, peer_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < peer_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, peer_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof rpc.Hathcoin.Peers)) {
        return super.equals(obj);
      }
      rpc.Hathcoin.Peers other = (rpc.Hathcoin.Peers) obj;

      boolean result = true;
      result = result && getPeerList()
          .equals(other.getPeerList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getPeerCount() > 0) {
        hash = (37 * hash) + PEER_FIELD_NUMBER;
        hash = (53 * hash) + getPeerList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static rpc.Hathcoin.Peers parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rpc.Hathcoin.Peers parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rpc.Hathcoin.Peers parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rpc.Hathcoin.Peers parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rpc.Hathcoin.Peers parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rpc.Hathcoin.Peers parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rpc.Hathcoin.Peers parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static rpc.Hathcoin.Peers parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static rpc.Hathcoin.Peers parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static rpc.Hathcoin.Peers parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static rpc.Hathcoin.Peers parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static rpc.Hathcoin.Peers parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(rpc.Hathcoin.Peers prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code rpc.Peers}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:rpc.Peers)
        rpc.Hathcoin.PeersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return rpc.Hathcoin.internal_static_rpc_Peers_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return rpc.Hathcoin.internal_static_rpc_Peers_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                rpc.Hathcoin.Peers.class, rpc.Hathcoin.Peers.Builder.class);
      }

      // Construct using rpc.Hathcoin.Peers.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getPeerFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (peerBuilder_ == null) {
          peer_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          peerBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return rpc.Hathcoin.internal_static_rpc_Peers_descriptor;
      }

      public rpc.Hathcoin.Peers getDefaultInstanceForType() {
        return rpc.Hathcoin.Peers.getDefaultInstance();
      }

      public rpc.Hathcoin.Peers build() {
        rpc.Hathcoin.Peers result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public rpc.Hathcoin.Peers buildPartial() {
        rpc.Hathcoin.Peers result = new rpc.Hathcoin.Peers(this);
        int from_bitField0_ = bitField0_;
        if (peerBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            peer_ = java.util.Collections.unmodifiableList(peer_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.peer_ = peer_;
        } else {
          result.peer_ = peerBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof rpc.Hathcoin.Peers) {
          return mergeFrom((rpc.Hathcoin.Peers)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(rpc.Hathcoin.Peers other) {
        if (other == rpc.Hathcoin.Peers.getDefaultInstance()) return this;
        if (peerBuilder_ == null) {
          if (!other.peer_.isEmpty()) {
            if (peer_.isEmpty()) {
              peer_ = other.peer_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePeerIsMutable();
              peer_.addAll(other.peer_);
            }
            onChanged();
          }
        } else {
          if (!other.peer_.isEmpty()) {
            if (peerBuilder_.isEmpty()) {
              peerBuilder_.dispose();
              peerBuilder_ = null;
              peer_ = other.peer_;
              bitField0_ = (bitField0_ & ~0x00000001);
              peerBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPeerFieldBuilder() : null;
            } else {
              peerBuilder_.addAllMessages(other.peer_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        rpc.Hathcoin.Peers parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (rpc.Hathcoin.Peers) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<rpc.Hathcoin.Peer> peer_ =
        java.util.Collections.emptyList();
      private void ensurePeerIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          peer_ = new java.util.ArrayList<rpc.Hathcoin.Peer>(peer_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          rpc.Hathcoin.Peer, rpc.Hathcoin.Peer.Builder, rpc.Hathcoin.PeerOrBuilder> peerBuilder_;

      /**
       * <code>repeated .rpc.Peer Peer = 1;</code>
       */
      public java.util.List<rpc.Hathcoin.Peer> getPeerList() {
        if (peerBuilder_ == null) {
          return java.util.Collections.unmodifiableList(peer_);
        } else {
          return peerBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .rpc.Peer Peer = 1;</code>
       */
      public int getPeerCount() {
        if (peerBuilder_ == null) {
          return peer_.size();
        } else {
          return peerBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .rpc.Peer Peer = 1;</code>
       */
      public rpc.Hathcoin.Peer getPeer(int index) {
        if (peerBuilder_ == null) {
          return peer_.get(index);
        } else {
          return peerBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .rpc.Peer Peer = 1;</code>
       */
      public Builder setPeer(
          int index, rpc.Hathcoin.Peer value) {
        if (peerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePeerIsMutable();
          peer_.set(index, value);
          onChanged();
        } else {
          peerBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .rpc.Peer Peer = 1;</code>
       */
      public Builder setPeer(
          int index, rpc.Hathcoin.Peer.Builder builderForValue) {
        if (peerBuilder_ == null) {
          ensurePeerIsMutable();
          peer_.set(index, builderForValue.build());
          onChanged();
        } else {
          peerBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .rpc.Peer Peer = 1;</code>
       */
      public Builder addPeer(rpc.Hathcoin.Peer value) {
        if (peerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePeerIsMutable();
          peer_.add(value);
          onChanged();
        } else {
          peerBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .rpc.Peer Peer = 1;</code>
       */
      public Builder addPeer(
          int index, rpc.Hathcoin.Peer value) {
        if (peerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePeerIsMutable();
          peer_.add(index, value);
          onChanged();
        } else {
          peerBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .rpc.Peer Peer = 1;</code>
       */
      public Builder addPeer(
          rpc.Hathcoin.Peer.Builder builderForValue) {
        if (peerBuilder_ == null) {
          ensurePeerIsMutable();
          peer_.add(builderForValue.build());
          onChanged();
        } else {
          peerBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .rpc.Peer Peer = 1;</code>
       */
      public Builder addPeer(
          int index, rpc.Hathcoin.Peer.Builder builderForValue) {
        if (peerBuilder_ == null) {
          ensurePeerIsMutable();
          peer_.add(index, builderForValue.build());
          onChanged();
        } else {
          peerBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .rpc.Peer Peer = 1;</code>
       */
      public Builder addAllPeer(
          java.lang.Iterable<? extends rpc.Hathcoin.Peer> values) {
        if (peerBuilder_ == null) {
          ensurePeerIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, peer_);
          onChanged();
        } else {
          peerBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .rpc.Peer Peer = 1;</code>
       */
      public Builder clearPeer() {
        if (peerBuilder_ == null) {
          peer_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          peerBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .rpc.Peer Peer = 1;</code>
       */
      public Builder removePeer(int index) {
        if (peerBuilder_ == null) {
          ensurePeerIsMutable();
          peer_.remove(index);
          onChanged();
        } else {
          peerBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .rpc.Peer Peer = 1;</code>
       */
      public rpc.Hathcoin.Peer.Builder getPeerBuilder(
          int index) {
        return getPeerFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .rpc.Peer Peer = 1;</code>
       */
      public rpc.Hathcoin.PeerOrBuilder getPeerOrBuilder(
          int index) {
        if (peerBuilder_ == null) {
          return peer_.get(index);  } else {
          return peerBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .rpc.Peer Peer = 1;</code>
       */
      public java.util.List<? extends rpc.Hathcoin.PeerOrBuilder> 
           getPeerOrBuilderList() {
        if (peerBuilder_ != null) {
          return peerBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(peer_);
        }
      }
      /**
       * <code>repeated .rpc.Peer Peer = 1;</code>
       */
      public rpc.Hathcoin.Peer.Builder addPeerBuilder() {
        return getPeerFieldBuilder().addBuilder(
            rpc.Hathcoin.Peer.getDefaultInstance());
      }
      /**
       * <code>repeated .rpc.Peer Peer = 1;</code>
       */
      public rpc.Hathcoin.Peer.Builder addPeerBuilder(
          int index) {
        return getPeerFieldBuilder().addBuilder(
            index, rpc.Hathcoin.Peer.getDefaultInstance());
      }
      /**
       * <code>repeated .rpc.Peer Peer = 1;</code>
       */
      public java.util.List<rpc.Hathcoin.Peer.Builder> 
           getPeerBuilderList() {
        return getPeerFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          rpc.Hathcoin.Peer, rpc.Hathcoin.Peer.Builder, rpc.Hathcoin.PeerOrBuilder> 
          getPeerFieldBuilder() {
        if (peerBuilder_ == null) {
          peerBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              rpc.Hathcoin.Peer, rpc.Hathcoin.Peer.Builder, rpc.Hathcoin.PeerOrBuilder>(
                  peer_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          peer_ = null;
        }
        return peerBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:rpc.Peers)
    }

    // @@protoc_insertion_point(class_scope:rpc.Peers)
    private static final rpc.Hathcoin.Peers DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new rpc.Hathcoin.Peers();
    }

    public static rpc.Hathcoin.Peers getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Peers>
        PARSER = new com.google.protobuf.AbstractParser<Peers>() {
      public Peers parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Peers(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Peers> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Peers> getParserForType() {
      return PARSER;
    }

    public rpc.Hathcoin.Peers getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EmptyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:rpc.Empty)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code rpc.Empty}
   */
  public  static final class Empty extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:rpc.Empty)
      EmptyOrBuilder {
    // Use Empty.newBuilder() to construct.
    private Empty(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Empty() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Empty(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return rpc.Hathcoin.internal_static_rpc_Empty_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return rpc.Hathcoin.internal_static_rpc_Empty_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              rpc.Hathcoin.Empty.class, rpc.Hathcoin.Empty.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof rpc.Hathcoin.Empty)) {
        return super.equals(obj);
      }
      rpc.Hathcoin.Empty other = (rpc.Hathcoin.Empty) obj;

      boolean result = true;
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static rpc.Hathcoin.Empty parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rpc.Hathcoin.Empty parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rpc.Hathcoin.Empty parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rpc.Hathcoin.Empty parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rpc.Hathcoin.Empty parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rpc.Hathcoin.Empty parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rpc.Hathcoin.Empty parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static rpc.Hathcoin.Empty parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static rpc.Hathcoin.Empty parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static rpc.Hathcoin.Empty parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static rpc.Hathcoin.Empty parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static rpc.Hathcoin.Empty parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(rpc.Hathcoin.Empty prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code rpc.Empty}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:rpc.Empty)
        rpc.Hathcoin.EmptyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return rpc.Hathcoin.internal_static_rpc_Empty_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return rpc.Hathcoin.internal_static_rpc_Empty_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                rpc.Hathcoin.Empty.class, rpc.Hathcoin.Empty.Builder.class);
      }

      // Construct using rpc.Hathcoin.Empty.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return rpc.Hathcoin.internal_static_rpc_Empty_descriptor;
      }

      public rpc.Hathcoin.Empty getDefaultInstanceForType() {
        return rpc.Hathcoin.Empty.getDefaultInstance();
      }

      public rpc.Hathcoin.Empty build() {
        rpc.Hathcoin.Empty result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public rpc.Hathcoin.Empty buildPartial() {
        rpc.Hathcoin.Empty result = new rpc.Hathcoin.Empty(this);
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof rpc.Hathcoin.Empty) {
          return mergeFrom((rpc.Hathcoin.Empty)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(rpc.Hathcoin.Empty other) {
        if (other == rpc.Hathcoin.Empty.getDefaultInstance()) return this;
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        rpc.Hathcoin.Empty parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (rpc.Hathcoin.Empty) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:rpc.Empty)
    }

    // @@protoc_insertion_point(class_scope:rpc.Empty)
    private static final rpc.Hathcoin.Empty DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new rpc.Hathcoin.Empty();
    }

    public static rpc.Hathcoin.Empty getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Empty>
        PARSER = new com.google.protobuf.AbstractParser<Empty>() {
      public Empty parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Empty(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Empty> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Empty> getParserForType() {
      return PARSER;
    }

    public rpc.Hathcoin.Empty getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_rpc_TransactionHeader_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_rpc_TransactionHeader_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_rpc_Transaction_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_rpc_Transaction_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_rpc_BlockHeader_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_rpc_BlockHeader_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_rpc_Block_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_rpc_Block_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_rpc_Peer_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_rpc_Peer_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_rpc_Peers_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_rpc_Peers_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_rpc_Empty_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_rpc_Empty_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016hathcoin.proto\022\003rpc\"{\n\021TransactionHead" +
      "er\022\014\n\004From\030\001 \001(\014\022\n\n\002To\030\002 \001(\014\022\021\n\tTimestam" +
      "p\030\003 \001(\r\022\023\n\013PayloadHash\030\004 \001(\014\022\025\n\rPayloadL" +
      "ength\030\005 \001(\r\022\r\n\005Nonce\030\006 \001(\r\"T\n\013Transactio" +
      "n\022&\n\006Header\030\001 \001(\0132\026.rpc.TransactionHeade" +
      "r\022\014\n\004Hash\030\002 \001(\014\022\017\n\007Payload\030\003 \001(\014\"v\n\013Bloc" +
      "kHeader\022\017\n\007Version\030\001 \001(\005\022\016\n\006Origin\030\002 \001(\014" +
      "\022\020\n\010PrevHash\030\003 \001(\014\022\022\n\nMerkelRoot\030\004 \001(\014\022\021" +
      "\n\tTimestamp\030\005 \001(\r\022\r\n\005Nonce\030\006 \001(\r\"c\n\005Bloc" +
      "k\022%\n\013BlockHeader\030\001 \001(\0132\020.rpc.BlockHeader",
      "\022\014\n\004Hash\030\002 \001(\014\022%\n\013Transaction\030\003 \003(\0132\020.rp" +
      "c.Transaction\"\'\n\004Peer\022\014\n\004Addr\030\001 \001(\t\022\021\n\tP" +
      "ublicKey\030\002 \001(\t\" \n\005Peers\022\027\n\004Peer\030\001 \003(\0132\t." +
      "rpc.Peer\"\007\n\005Empty2R\n\004Info\022#\n\010ShowPeer\022\n." +
      "rpc.Empty\032\t.rpc.Peer\"\000\022%\n\tShowPeers\022\n.rp" +
      "c.Empty\032\n.rpc.Peers\"\000b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_rpc_TransactionHeader_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_rpc_TransactionHeader_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_rpc_TransactionHeader_descriptor,
        new java.lang.String[] { "From", "To", "Timestamp", "PayloadHash", "PayloadLength", "Nonce", });
    internal_static_rpc_Transaction_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_rpc_Transaction_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_rpc_Transaction_descriptor,
        new java.lang.String[] { "Header", "Hash", "Payload", });
    internal_static_rpc_BlockHeader_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_rpc_BlockHeader_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_rpc_BlockHeader_descriptor,
        new java.lang.String[] { "Version", "Origin", "PrevHash", "MerkelRoot", "Timestamp", "Nonce", });
    internal_static_rpc_Block_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_rpc_Block_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_rpc_Block_descriptor,
        new java.lang.String[] { "BlockHeader", "Hash", "Transaction", });
    internal_static_rpc_Peer_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_rpc_Peer_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_rpc_Peer_descriptor,
        new java.lang.String[] { "Addr", "PublicKey", });
    internal_static_rpc_Peers_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_rpc_Peers_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_rpc_Peers_descriptor,
        new java.lang.String[] { "Peer", });
    internal_static_rpc_Empty_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_rpc_Empty_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_rpc_Empty_descriptor,
        new java.lang.String[] { });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
